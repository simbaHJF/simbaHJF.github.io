---
layout:     post
title:      "mysql索引"
date:       2019-06-17 13:30:00 +0800
author:     "simba"
header-img: "img/post-bg-miui6.jpg"
tags:
    - mysql

---

> 极客时间--丁奇--mysql实战 学习笔记

##	索引的常见类型
1.	哈希表	一种键-值(key-value)存储数据的结构,当key发生哈希碰撞时,通常采用链地址法解决.
哈希索引做区间查询的速度是很慢的,哈希表这种结构适用于只有等值查询的场景.

2.	有序数组	有序数组在等值查询和范围查询场景中的性能读非常优秀.但是,在需要更新数据的时候就很麻烦,往中间插入一个记录就必须得挪动后面所有的记录,成本太高.
所以,有序数组索引只适用于静态存储引擎.比如要保存2017年某个城市的所有人口信息,这类不会再修改的数据.

3.	二叉搜索树	为了维持O(log(N))的查询复杂度,就需要保持这棵树是平衡二叉树,这就造成了更新的复杂性.
另外,假设有一个100万节点的平衡二叉树,树高20.一次查询可能需要访问20个数据块.在机械硬盘时代,从磁盘随机读一个数据块需要10ms左右的寻址时间.也就是说,对于一个100万行的表,如果使用二叉树来存储,单独访问一个行可能需要20个10ms的时间,这个查询是很慢的.
为了让一个查询尽量少地读磁盘,就必须让查询过程访问尽量少的数据块.那么,我们就不应该使用二叉树,而是要使用"N叉"树.


以InnoDB的一个整数字段索引为例,这个N差不多是1200.这棵树高是4的时候,就可以存1200的3次方个值,大约17亿.考虑到树根的数据块总是在内存中的,一个10亿行的表上的一个整数字段索引,查找一个值最多只需要访问3次磁盘.其实,树的第二层也有很大概率在内存中,那么访问磁盘的平均次数就更少了.