---
layout:     post
title:      "消息队列--如何保证消息不丢失"
date:       2019-10-26 21:30:00 +0800
author:     "simba"
header-img: "img/post-bg-miui6.jpg"
tags:
    - MQ

---

> 极客时间--李玥--消息队列高手课 学习笔记

##	确保消息可靠传递

下面来看一下,在消息从生产到消费的整个过程中,哪些地方可能会导致消息丢失,以及应该如何避免消息丢失.

一条消息从生产到消费完成这个过程中,可以划分三个阶段,如下图:
![KD029g.jpg](https://s2.ax1x.com/2019/10/26/KD029g.jpg)

*	生产阶段:		在这个阶段,从消息在Producer创建出来,经过网络传输发送到Broker端.
*	存储阶段:		在这个阶段,消息在Broker端存储,如果是集群,消息会在这个阶段被复制到其他的副本上.
*	消费阶段:		在这个阶段,Consumer次欧诺个Broker上拉去消息,经过网络传输发送到Consumer上.


####	1.	生产阶段
在生产阶段,消息队列通过最常用的请求确认机制,来保证消息的可靠传递:当业务代码调用发消息方法时,消息队列的客户端会把消息发送到Broker,Broker收到消息后,会给客户端返回一个确认响应,表明消息已经收到了.客户端收到响应后,完成了一次正产消息的发送.

只要Producer收到了Broker的确认响应,就可以确保消息在生产阶段不会丢失.有些消息队列在长时间没收到发送确认响应后,会主动重试,如果重试再失败,就会以返回值或者异常的方式告知用户.

在编写发送消息代码时,需要注意,正确处理返回值或者捕获异常,就可以保证这个阶段的消息不会丢失.同步发送时,只要注意捕获异常即可;异步发送时,则需要在回调方法里进行检查,这个地方是需要特别注意的,很多丢消息的原因就是,使用了异步发送,却没有在回调中检查发送结果.

####	2.	存储阶段
在存储阶段正常情况下,只要Broker在正常运行,就不会出现丢失消息的问题,但是如果Broker出现了故障,比如进程死掉了或者服务器宕机了,还是可能会丢失消息的.

*如果对消息的可靠性要求非常高,可以通过配置Broker参数来避免因为宕机丢失消息*

对于单个节点的Broker,需要配置Broker参数,在收到消息后,将消息写入磁盘后再给Producer返回确认响应,这样即使发生宕机,由于消息已经被写入磁盘,就不会丢失消息,恢复后还可以继续消费消息.例如,在RocketMQ中,需要将刷盘方式flushDiskType配置为SYNC_FLUSH同步刷盘.

如果是Broker是由多个节点组成的集群,需要将Broker集群配置成:至少将消息发送到2个以上的节点,再给客户端回复发送确认响应.这样当某个Broker宕机时,其他的Broker可以替代宕机的Broker,也不会发生消息丢失.

####	3.	消费阶段
消费阶段采用和生产阶段类似的确认机制来保证消息的可靠传递,客户端从Broker拉取消息后,执行用户的消费业务逻辑,成功后,才会给Broker发送消费确认响应.如果Broker没有收到消费确认响应,下次拉取消息的时候还会返回同一条消息,确保消息不会在网络传输过程中丢失,也不会因为客户端在执行消费逻辑中出错导致丢失.

*在编写消费代码时需要注意,不要在收到消息后就立即发送消费确认,而是应该在执行完所有消费业务逻辑之后,在发送消费确认.*

